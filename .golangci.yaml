# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # from this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  # skip-dirs:
  #  - vendor
  skip-dirs: []

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  format: tab

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

  # sorts results by: filepath, line and column
  sort-results: false


linters:
  enable:
    - dupl
    - errcheck
    - errorlint
    - exhaustive
    - forbidigo
    - gocyclo
    - goconst
    - gocritic
    - gofmt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - makezero
    - misspell
    - nakedret
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - staticcheck
    - thelper
    - typecheck
    - unparam
    - unused
    - whitespace